@mixin bnd($bnd){
	$keys:(
		d:display,p:position,w:width,h:height,
		l:left,r:right,t:top,b:bottom,x:left,y:bottom,z:z-index,
		pd:padding,mg:margin,
		pdt:padding-top,mgt:margin-top,
		pdb:padding-bottom,mgb:margin-bottom,
		pdl:padding-left,mgl:margin-left,
		pdr:padding-right,mgr:margin-right,
		bs:box-sizing,fl:float,cl:clear,
		bi:break-inside,
		pbb:page-break-before,
		pbi:page-break-inside,
		pba:page-break-after,
		o:overflow,ox:overflow-x,oy:overflow-y,
		of:object-fit,op:object-position,
		as:align-self,
		g:grid-area,
		gr:grid-row,
		gc:grid-column,
		nth:order
	);
	$dvals:(
		b:block,f:flex,g:grid,
		ib:inline-block,i:inline,
		it:inline-table,t:table,
		th:table-header-group,
		tb:table-row-group,
		tf:table-footer-group,
		tr:table-row,tc:table-cell,
		n:none
	);
	$pvals:(s:static,r:relative,a:absolute,f:fixed);
	$bsvals:(b:border-box,c:content-box);
	$ovals:(v:visible,h:hidden,s:scroll,a:auto);
	$flvals:(l:left,r:right,n:none);
	$clvals:(l:left,r:right,b:both);
	$apvals:(n:none,b:button);
	$bivals:(n:auto,a:avoid,b:always,p:avoid-page,c:avoid-column);
	$ofvals:(f:fill,c:cover,i:contain,cvr:cover,cnt:contain,sd:scale-down);
	$asvals:(f:stretch,c:center,e:end,s:start);
	$opvals:(c:center);
	@each $key,$val in $bnd{
		@if $key == p{$val:map-get($pvals,$val);}
		@if $key == d{$val:map-get($dvals,$val);}
		@if $key == fl{$val:map-get($flvals,$val);}
		@if $key == cl{$val:map-get($clvals,$val);}
		@if $key == bs{$val:map-get($bsvals,$val);}
		@if $key == bi or $key == pbb or $key == pbi or $key == pba
			{$val:map-get($bivals,$val);}
		@if $key == w or $key == h or $key == x or $key == y or 
			$key == l or $key == r or $key == t or $key == b or 
			$key == pd or $key == mg or
			$key == pdt or $key == mgt or
			$key == pdb or $key == mgb or
			$key == pdl or $key == mgl or
			$key == pdr or $key == mgr
			{$val:cp_get_size_values($val);}
		@if $key == w or $key == h{
			@if type-of($val) == 'list'{
				@if length($val) == 2{
					@if nth($val,1) == auto or (index(('%','vw','vh','vmax','vmin'),unit(nth($val,1))) != false and nth($val,2) != auto){
						max-#{map-get($keys,$key)}:nth($val,2);
						$val:nth($val,1);
					}
					@else{
						min-#{map-get($keys,$key)}:nth($val,1);
						$val:nth($val,2);
					}
				}
				@else{
					min-#{map-get($keys,$key)}:nth($val,1);
					max-#{map-get($keys,$key)}:nth($val,3);
					$val:nth($val,2);
				}
			}
		}
		@if $key == o or $key == ox or $key == oy{$val:map-get($ovals,$val);}
		@if $key == of{$val:map-get($ofvals,$val);}
		@if $key == op{$val:map-get($opvals,$val);}
		@if $key == f{@include flex($val);}
		@if $key == c{@include columns($val);}
		@if $key == ap{$val:replace_values($val,$apvals);@include appearance($val);}
		@if $key == as{$val:map-get($asvals,$val);}
		@if map-has-key($keys,$key){#{map-get($keys,$key)}:$val;}
	}
}

@mixin columns($col){
	-webkit-columns:$col;
	   -moz-columns:$col;
			columns:$col;
}

@mixin appearance($app){
	-webkit-appearance:$app;
	   -moz-appearance:$app;
			appearance:$app;
}